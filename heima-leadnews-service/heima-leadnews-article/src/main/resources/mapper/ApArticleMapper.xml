<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.heima.article.mapper.ApArticleMapper">

    <insert id="insertArticle" useGeneratedKeys="true" keyProperty="id">
        insert into
            ap_article(title, author_id, author_name, channel_id, channel_name, layout, flag, images, labels, likes, collection, comment, views, province_id, city_id, county_id, created_time, publish_time, static_url)
        values (#{title}, #{authorId}, #{authorName}, #{channelId}, #{channelName}, #{layout}, #{flag}, #{images}, #{labels},
                #{likes}, #{collection}, #{comment}, #{views}, #{provinceId}, #{cityId}, #{countyId}, #{createdTime}, #{publishTime}, #{staticUrl})
    </insert>

    <update id="updateById">
        update ap_article
        <set>
            <if test="staticUrl != null">
                static_url = #{staticUrl},
            </if>
            <if test="comment != null">
                comment = #{comment},
            </if>
            <if test="views != null">
                views = #{views},
            </if>
            <if test="likes != null">
                likes = #{likes},
            </if>
            <if test="collection != null">
                collection = #{collection},
             </if>
        </set>
        where id = #{id}
    </update>

    <resultMap id="articleSearchVo" type="com.heima.model.article.vos.ApArticleSearchVo">
        <result column="id" property="id"/>
        <result column="publish_time" property="publishTime"/>
        <result column="layout" property="layout"/>
        <result column="images" property="images"/>
        <result column="static_url" property="staticUrl"/>
        <result column="author_id" property="authorId"/>
        <result column="author_Name" property="authorName"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
    </resultMap>

    <select id="loadArticle" resultMap="articleSearchVo">
        select ap_article.*, ap_article_content.content as "content"
        from ap_article, ap_article_content, ap_article_config
        <where>
            ap_article.id = ap_article_content.article_id and
            ap_article.id = ap_article_config.article_id and
            ap_article_config.is_delete = 0 and
            ap_article_config.is_down = 0
            <if test="articleId != null">
                and ap_article.id = #{articleId}
            </if>
        </where>
    </select>

    <select id="pageQueryApArticle" resultType="com.heima.model.article.pojos.ApArticle">
        select ap_article.* from ap_article LEFT JOIN ap_article_config ON ap_article.id = ap_article_config.article_id
        <where>
            and is_down = 0 and is_delete = 0
            <if test="articleHomeDto.tag != '__all__'">
                and ap_article.channel_id = #{articleHomeDto.tag}
            </if>
            <if test="articleHomeDto.minBehotTime != null and type == 1">
                and ap_article.publish_time &lt; #{articleHomeDto.minBehotTime}
            </if>
            <if test="articleHomeDto.maxBehotTime != null and type == 2">
                and ap_article.publish_time &gt; #{articleHomeDto.maxBehotTime}
            </if>
        </where>
        order by ap_article.publish_time desc
    </select>

    <select id="findAll" resultType="com.heima.model.article.pojos.ApArticle">
        <![CDATA[ select ap_article.* from ap_article inner join ap_article_config on ap_article.id = ap_article_config.article_id
        where ap_article_config.is_down = 0
        and ap_article_config.is_delete = 0
        and ap_article.publish_time >= #{time,jdbcType=DATE}  ]]>
    </select>

    <select id="getById" resultType="com.heima.model.article.pojos.ApArticle">
        select * from ap_article
            where id = #{articleId}
    </select>

</mapper>